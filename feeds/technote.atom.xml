<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>LeafHub</title><link href="http://leafwind.tw/" rel="alternate"></link><link href="http://leafwind.tw/feeds/technote.atom.xml" rel="self"></link><id>http://leafwind.tw/</id><updated>2016-02-19T00:00:00+08:00</updated><entry><title>解決 python 在讀取 .json 檔案時佔用記憶體過多的問題</title><link href="http://leafwind.tw/20160219-release-python-memory-by-sub-process.html" rel="alternate"></link><updated>2016-02-19T00:00:00+08:00</updated><author><name>leafwind</name></author><id>tag:leafwind.tw,2016-02-19:20160219-release-python-memory-by-sub-process.html</id><summary type="html">&lt;h2&gt;故事是這樣的&lt;/h2&gt;
&lt;p&gt;某天我發現原本執行都沒有問題的程式突然掛了&lt;/p&gt;
&lt;p&gt;仔細一查發現是記憶體使用過多，因為有別人的程式需要資源，跑到一半就被 OS 給砍了&lt;/p&gt;
&lt;p&gt;（題外話，砍的優先順序包括你的程式跑了多久、吃多少記憶體等等一堆參數）&lt;/p&gt;
&lt;p&gt;而我心中以為，某些用不到的 object reference 在 function return 之後就會釋放&lt;/p&gt;
&lt;p&gt;顯然並沒有&lt;/p&gt;
&lt;p&gt;於是先找了一些方法像是 &lt;code&gt;del&lt;/code&gt; 或 &lt;code&gt;gc.collect()&lt;/code&gt; 試圖手動釋放記憶體&lt;/p&gt;
&lt;p&gt;但實驗證實也完全沒有用&lt;/p&gt;
&lt;p&gt;最後找到一篇文章 (1)&lt;/p&gt;
&lt;h4&gt;python 要釋放指定的 object 所佔用的 memory 原來要用到 sub-process&lt;/h4&gt;
&lt;p&gt;著實讓我驚呆了，特此紀念解決的過程：&lt;/p&gt;
&lt;h2&gt;問題開始&lt;/h2&gt;
&lt;p&gt;給定一個 &lt;code&gt;.json&lt;/code&gt; file，經過 &lt;code&gt;json.load()&lt;/code&gt; 或 &lt;code&gt;json.loads()&lt;/code&gt; 讀取為 object 之後  &lt;/p&gt;
&lt;p&gt;佔用的 memory 可能會是原本 text file 的 8~10 倍（ex: 400M file =&amp;gt; 5G memory，取決於 object content）  &lt;/p&gt;
&lt;p&gt;若這個 json file 本來就很大，讀取後系統資源可能就不夠，甚至有機會被 kernel kill  &lt;/p&gt;
&lt;p&gt;就算最後的 output 很小，使用 &lt;code&gt;del&lt;/code&gt; 或 &lt;code&gt;gc.collect()&lt;/code&gt; 仍然無法在系統端看到記憶體被釋放&lt;/p&gt;
&lt;p&gt;這個問題其實由兩個部分組成&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;沒有一個直接的方式釋放 process 在讀檔過程中所佔用的記憶體&lt;/li&gt;
&lt;li&gt;python 讀取 json 檔案非常佔用記憶體&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Solution1. sub-process (multiprocessing)&lt;/h2&gt;
&lt;p&gt;使用 pyhton 內建的 &lt;code&gt;multiprocessing&lt;/code&gt; module&lt;/p&gt;
&lt;p&gt;可以間接做到「釋放用不到的記憶體」&lt;/p&gt;
&lt;p&gt;我不知道 &lt;code&gt;multiprocessing&lt;/code&gt; 這個 module 當初開發的目的有沒有包含記憶體釋放&lt;/p&gt;
&lt;p&gt;但它確實可以做到 &lt;code&gt;del&lt;/code&gt; 及 &lt;code&gt;gc.collect()&lt;/code&gt; 做不到的事情...&lt;/p&gt;
&lt;h3&gt;pros:&lt;/h3&gt;
&lt;p&gt;若程式處理完 &lt;code&gt;.json&lt;/code&gt; 之後只會剩下少部分資料&lt;/p&gt;
&lt;p&gt;我們可以把「讀檔-&amp;gt;處理」這一段 code 寫成 subprocess&lt;/p&gt;
&lt;p&gt;這樣只要 subprocess 執行完並 exit 後&lt;/p&gt;
&lt;p&gt;所有暫時佔用的記憶體在 system 端就會被確實釋放&lt;/p&gt;
&lt;h3&gt;cons:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;inter-process 之間的 object 傳遞似乎有某些限制：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;object size 大到某個程度（ex. dict key size &amp;gt; 40k）之後就會卡死&lt;/p&gt;
&lt;p&gt;（這個詞不精確，其實是跑很久沒回應，但不確定最後會不會停）&lt;/p&gt;
&lt;p&gt;不過幾百個 key 的 dict 還是 OK 的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;當 &lt;code&gt;.json&lt;/code&gt; 檔案大到某個程度，一次讀取完所需記憶體比可用記憶體還大的話，此法就沒用了，只能求助法二。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Solution2. ijson (streaming)&lt;/h2&gt;
&lt;h3&gt;pros:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;不管多大的 json file 都能處理（？）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;cons:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;需要更動程式架構&lt;/li&gt;
&lt;li&gt;ijson 雖然非常省記憶體，但讀取速度可能也較慢&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（尚未做 benchmark，也無優化過，純粹體感）&lt;/p&gt;
&lt;p&gt;[1.] [Huge memory usage of Python's json module?] (http://stackoverflow.com/questions/11057712/huge-memory-usage-of-pythons-json-module)&lt;/p&gt;</summary><category term="python"></category><category term="memory"></category><category term="leak"></category><category term="json"></category></entry><entry><title>用 pelican + github 建立完全免費的 blog</title><link href="http://leafwind.tw/20141111-using-pelican-to-build-blog.html" rel="alternate"></link><updated>2014-11-11T22:09:41+08:00</updated><author><name>leafwind</name></author><id>tag:leafwind.tw,2014-11-11:20141111-using-pelican-to-build-blog.html</id><summary type="html">

&lt;p&gt;&lt;img alt="python" src="https://lh5.googleusercontent.com/-Ohlo1KgsThU/VGJDLznI91I/AAAAAAAAAEM/xCvsvmiqziU/s128-no/Python_logo%5B1%5D.png" /&gt;&lt;img alt="pelican-image" src="https://lh5.googleusercontent.com/u7NWKmcEDaTNBJHYSH6xEcLSki7-TC7zaIhlZctkDA=s200-no" /&gt;&lt;img alt="github" src="https://lh5.googleusercontent.com/-DKPyRhwsZNI/VGJDokSPLLI/AAAAAAAAAEo/5yQN2duKHJM/s256-no/github%5B1%5D.png" /&gt;&lt;/p&gt;
&lt;p&gt;自從用了 logdown 之後，就非常喜歡 markdown 的寫作方式&lt;/p&gt;
&lt;p&gt;html 實在不是給人寫的，那種事情給機器自動產生就好了&lt;/p&gt;
&lt;p&gt;但 logdown 畢竟還是別人 host 的服務，功能就相對侷限&lt;/p&gt;
&lt;p&gt;在原本我最愛的「拖拉上傳圖片」功能也變成付費之後&lt;/p&gt;
&lt;p&gt;便開始找新的替代方案&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;其實 pelican + github 也不是什麼新的組合&lt;/p&gt;
&lt;p&gt;google 一下就有很多文章教你怎麼裝&lt;/p&gt;
&lt;p&gt;這篇只是記錄一下我的安裝過程
&lt;/p&gt;
&lt;h2&gt;why pelican?&lt;/h2&gt;
&lt;p&gt;pelican 是一個網站內容產生工具，他的功能有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以支援用 reStructuredText, Markdown, or AsciiDoc 等格式寫作&lt;/li&gt;
&lt;li&gt;產生完全靜態的頁面，可以放到任何空間&lt;/li&gt;
&lt;li&gt;佈景可以自訂（網路上也有很多樣板可以套用）&lt;/li&gt;
&lt;li&gt;支援 Atom/RSS feeds&lt;/li&gt;
&lt;li&gt;程式/語法 highlighting&lt;/li&gt;
&lt;li&gt;模組化的外掛系統以及外掛 repository 可供使用&lt;/li&gt;
&lt;li&gt;還有很多 feature...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺點：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;過程中可能需要一點程式門檻 debug，但建置完環境之後就不需要&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;對前端技術不熟的話，無法刻出像其他服務一樣 fancy 的介面，但至少比只能用內建主題的 logdown 比強大得多&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;why markdown?&lt;/h2&gt;
&lt;p&gt;對 coding 習慣的宅宅來說&lt;/p&gt;
&lt;p&gt;使用 python / markdown / github 這些工具跟吃飯一樣&lt;/p&gt;
&lt;p&gt;很多時候只是要記錄一些事情&lt;/p&gt;
&lt;p&gt;但如果你想把有 code 的筆記貼到一般部落格服務&lt;/p&gt;
&lt;p&gt;那不是&lt;s&gt;腦袋有問題&lt;/s&gt;不知道有其他工具就是&lt;s&gt;時間太多&lt;/s&gt;耐心過於常人&lt;/p&gt;
&lt;p&gt;html 很簡單但排版非常費工&lt;/p&gt;
&lt;p&gt;makrdown 只需要記比 html 還要少的語法，卻能大大提昇排版準確度&lt;/p&gt;
&lt;p&gt;&lt;b&gt;生命，就不應該浪費在不必要的排版上&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;並且支援嵌入許多程式語法&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;另一個好處是 markdown 本身就是原始碼&lt;/p&gt;
&lt;p&gt;不像 html 備份的時候會遇到一大堆格式轉換問題&lt;/p&gt;
&lt;p&gt;（只有偶爾會有小問題）&lt;/p&gt;
&lt;p&gt;但基本上把文章備份在 dropbox 之類的地方&lt;/p&gt;
&lt;p&gt;完全不會怕哪天服務倒閉&lt;/p&gt;
&lt;p&gt;那就從第一步開始吧！&lt;/p&gt;
&lt;h2&gt;python environment&lt;/h2&gt;
&lt;p&gt;首先要有一個 python 環境&lt;/p&gt;
&lt;h3&gt;linux:&lt;/h3&gt;
&lt;p&gt;不要跟我說你沒有 python，自己想辦法&lt;/p&gt;
&lt;h3&gt;windows:&lt;/h3&gt;
&lt;p&gt;推薦裝 &lt;a href="https://store.continuum.io/cshop/anaconda/"&gt;anaconda&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;只要下載整個執行檔裝完就有 iPython / pip 等等環境，也不用設 path&lt;/p&gt;
&lt;p&gt;對於不常在 windows 上開發 python 程式的使用者來說&lt;/p&gt;
&lt;p&gt;這種懶人包已經很夠用了&lt;/p&gt;
&lt;h2&gt;安裝 python 必要套件&lt;/h2&gt;
&lt;p&gt;一開始只需要兩個 package&lt;/p&gt;
&lt;p&gt;如果你不想用 markdown 寫 blog 的話甚至只要裝 pelican 就好&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;markdown&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;隨機支線任務：&lt;/h3&gt;
&lt;p&gt;通常中文的 windows 會卡在 pelican 編譯不過&lt;/p&gt;
&lt;p&gt;在我浪費了一個美好的假日下午之後&lt;/p&gt;
&lt;p&gt;終於發現直接 compile source code 才是正解..&lt;/p&gt;
&lt;p&gt;到 &lt;a href="https://github.com/getpelican/pelican"&gt;getpelican&lt;/a&gt; 下載原始碼然後切到資料夾裡面：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;blog 資料夾結構&lt;/h2&gt;
&lt;p&gt;先建立一個 &lt;code&gt;blog&lt;/code&gt; 資料夾，然後下指令讓 pelican 自動產生其他所需的檔案&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir blog&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nb"&gt;cd &lt;/span&gt;blog
pelican-quickstart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;過程中不清楚的可以先用預設值就好，之後再改&lt;/p&gt;
&lt;p&gt;現在 &lt;code&gt;blog&lt;/code&gt; 資料夾底下會有一個 &lt;code&gt;content&lt;/code&gt; 放文章原始檔&lt;/p&gt;
&lt;p&gt;另外 &lt;code&gt;output&lt;/code&gt; 則是放產生出來的網頁檔&lt;/p&gt;
&lt;h3&gt;linking with github&lt;/h3&gt;
&lt;p&gt;先把 github 的文章 clone 下來：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;output
git clone git@github.com:username/username.github.io.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;再設定 pelican 輸出到 github 資料夾
pelicanconf.py add:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;OUTPUT_PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;output/username.github.io/&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;這樣就把 github 連接好了&lt;/p&gt;
&lt;p&gt;接下來只要在 content 裡面寫一篇 xxx.md 的文章：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;My&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Modified&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt;
&lt;span class="n"&gt;Tags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;publishing&lt;/span&gt;
&lt;span class="n"&gt;Slug&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;
&lt;span class="n"&gt;Authors&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Alexis&lt;/span&gt; &lt;span class="n"&gt;Metaireau&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Conan&lt;/span&gt; &lt;span class="n"&gt;Doyle&lt;/span&gt;
&lt;span class="n"&gt;Summary&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Short&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;feeds&lt;/span&gt;

&lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;my&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt; &lt;span class="n"&gt;blog&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在 anaconda command prompt 執行 &lt;code&gt;pelican&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然後再 push 到 github 上面&lt;/p&gt;
&lt;p&gt;你的 blog 就會出現在 &lt;code&gt;http://username.github.io/&lt;/code&gt; 囉&lt;/p&gt;
&lt;p&gt;（如果用 linux 的話更方便，可以寫在一個 makefile 裡面）&lt;/p&gt;
&lt;p&gt;到這裡一個基本的 blog 架構就有了，接下來是其他附加的功能&lt;/p&gt;
&lt;h2&gt;安裝主題&lt;/h2&gt;
&lt;p&gt;借用 jsliang 製作的 &lt;a href="http://jsliang.com/blog/2013/02/moving-to-pelican-hosting-on-github-pages.html"&gt;pelican-fresh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;responsive layout 感覺就很厲害（拼命縮放視窗中）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git clone https://github.com/jsliang/pelican-fresh.git
&lt;span class="nb"&gt;cd &lt;/span&gt;pelican-fresh
pelican-themes -i pelican-fresh &lt;span class="c"&gt;# theme dir name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;再套用設定到 &lt;code&gt;pelicanconf.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;pelican-fresh&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;安裝 ShareThis script&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pelicanconf.py&lt;/code&gt; 加上：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;SHARETHIS_PUB_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;你的 ShareThis key&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;code&gt;base.html&lt;/code&gt; &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 裡加上：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;script&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://w.sharethis.com/button/buttons.js&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;script&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;stLight&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="n"&gt;publisher&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;{{ SHARETHIS_PUB_KEY }}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;doNotHash&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;doNotCopy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;hashAddressBar&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;false&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;code&gt;article.html&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 &lt;code&gt;&amp;lt;div&amp;gt;{{ article.content }}&amp;lt;/div&amp;gt;&lt;/code&gt; 之前（或其他想要放的地方）加上：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;SHARETHIS_PUB_KEY&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt; &lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;sharethis-top&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt; &lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;st_fblike_hcount&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;displayText&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Facebook Like&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt; &lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;st_plusone_hcount&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;displayText&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Google +1&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt; &lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;st_twitter_hcount&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;displayText&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Tweet&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;endif&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;其他主題&lt;/h3&gt;
&lt;p&gt;後來發現還有好多 theme 可以用，大部分也都是 responsive&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git clone https://github.com/getpelican/pelican-themes
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其中 &lt;code&gt;gum&lt;/code&gt;, &lt;code&gt;pelican-bootstrap3&lt;/code&gt;, &lt;code&gt;tuxlite_tbs&lt;/code&gt; 是我比較喜歡的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gum&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;img alt="gum" src="https://lh5.googleusercontent.com/EXU2DtwuLCyXPOoMo8m4p2fI_h0Geg9UXAptfkwlzA=w600-h614-no" /&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;pelican-bootstrap3&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;img alt="pelican-bootstrap3" src="https://lh5.googleusercontent.com/gGucQ8edPX8euZ6R-xOxfaY98KfwA6ccrPVEJfdzMw=w600-h624-no" /&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;tuxlite_tbs: （目前使用）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;img alt="tuxlite_tbs" src="https://lh6.googleusercontent.com/Tx_u5u-bRqxIeFSr0lG06XKbiv1jUrIJRMUa59Xw_g=w600-h463-no" /&gt;&lt;/h2&gt;
&lt;h2&gt;Disqus&lt;/h2&gt;
&lt;p&gt;有了 disqus 就等於有了跨站的留言系統，非常方便&lt;/p&gt;
&lt;p&gt;&lt;a href="https://disqus.com/"&gt;Disqus&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Admin -&amp;gt; Settings -&amp;gt;Your website's shortname is XXX&lt;/p&gt;
&lt;p&gt;pelicanconf.py:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;DISQUS_SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;shortname&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Google Analytics&lt;/h2&gt;
&lt;p&gt;暫時用不到，不過還是先設定好放著&lt;/p&gt;
&lt;p&gt;pelicanconf.py:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;GOOGLE_ANALYTICS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;UA-XXXXXXXX-X&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Summary Plugin&lt;/h2&gt;
&lt;p&gt;由於 pelican 預設會把文章前 N 個字當做 summary 放在首頁&lt;/p&gt;
&lt;p&gt;（也就是「繼續閱讀」之前的那些文字）&lt;/p&gt;
&lt;p&gt;很多時候最前面的文字並不一定最適合當 summary&lt;/p&gt;
&lt;p&gt;因此有人寫了一個套件可以自訂 summary 的段落&lt;/p&gt;
&lt;p&gt;先到 &lt;a href="https://github.com/getpelican/pelican-plugins"&gt;這裡&lt;/a&gt; 下載&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;pelicanconf.py&lt;/code&gt; 加入：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;PLUGIN_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;pelican-plugins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;summary&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;之後文章只要這樣寫：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;My&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Tags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;thats&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;awesome&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;yeah&lt;/span&gt;
&lt;span class="n"&gt;Slug&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;
&lt;span class="n"&gt;Author&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Alexis&lt;/span&gt; &lt;span class="n"&gt;Metaireau&lt;/span&gt;

&lt;span class="n"&gt;Hahaha&lt;/span&gt;

&lt;span class="n"&gt;These&lt;/span&gt; &lt;span class="n"&gt;lines&lt;/span&gt;

&lt;span class="n"&gt;Are&lt;/span&gt;

&lt;span class="n"&gt;No&lt;/span&gt; &lt;span class="n"&gt;meaning&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;!--&lt;/span&gt; &lt;span class="n"&gt;PELICAN_BEGIN_SUMMARY&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;my&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt; &lt;span class="n"&gt;blog&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;!--&lt;/span&gt; &lt;span class="n"&gt;PELICAN_END_SUMMARY&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="n"&gt;occurs&lt;/span&gt; &lt;span class="n"&gt;after&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;summary&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;就會把夾在中間的文字自動當做 summary，非常好用&lt;/p&gt;
&lt;h2&gt;Google adsense&lt;/h2&gt;
&lt;p&gt;這其實跟 pelican 功能無關，但既然是架站就順便一下&lt;/p&gt;
&lt;p&gt;通常在任何 theme 的 &lt;code&gt;templates/base.html&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;裡面加上你的 adsense 程式碼即可&lt;/p&gt;
&lt;p&gt;譬如我要加在側邊欄，就加到 nav-list object 裡面&lt;/p&gt;
&lt;h2&gt;Sublime Plugin&lt;/h2&gt;
&lt;p&gt;由於每次寫文章都要手動新增 metadata 很麻煩&lt;/p&gt;
&lt;p&gt;jsliang 也做了一個套件叫 &lt;a href="https://github.com/jsliang/sublime-pelican"&gt;sublime-pelican&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這樣可以讓新增文章的過程更便利&lt;/p&gt;
&lt;h2&gt;一個好用的編輯器&lt;/h2&gt;
&lt;p&gt;markdown 好用歸好用&lt;/p&gt;
&lt;p&gt;但還是需要一個所見即所得的編輯器&lt;/p&gt;
&lt;p&gt;在 mac 可以使用 macdown，這樣會輕鬆許多&lt;/p&gt;
&lt;p&gt;另外語法部分可以參考：&lt;/p&gt;
&lt;p&gt;[makrdown syntax for pelican] (http://sourceforge.net/p/pelican-edt/wiki/markdown_syntax/)&lt;/p&gt;
&lt;h2&gt;網頁樣板(template)設定&lt;/h2&gt;
&lt;h3&gt;title&lt;/h3&gt;
&lt;p&gt;有些主題預設不會把文章標題放在視窗標題，也就是 &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; 標籤&lt;/p&gt;
&lt;p&gt;首先到 theme 的 &lt;code&gt;base.html&lt;/code&gt; 裡面找到這行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;block&lt;/span&gt; &lt;span class="n"&gt;windowtitle&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}{{&lt;/span&gt; &lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="p"&gt;}}{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;endblock&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;看到 &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; 後面用的是 &lt;code&gt;windowtitle&lt;/code&gt;，記下來&lt;/p&gt;
&lt;p&gt;再到 &lt;code&gt;article.html&lt;/code&gt; 把前三行改成：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;extends&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;base.html&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;block&lt;/span&gt; &lt;span class="n"&gt;windowtitle&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}{{&lt;/span&gt; &lt;span class="n"&gt;article&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;striptags&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="p"&gt;}}{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;endblock&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;block&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;short icon&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;base.html&lt;/code&gt; 裡面找到 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 加入：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;shortcut icon&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://launchyard.com/images/favicon.png&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="pelican"></category><category term="blog"></category><category term="github"></category><category term="markdown"></category></entry></feed>